[{"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\index.js":"1","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\App.js":"3","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Home.js":"4","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\CreatePost.js":"5","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Post.js":"6","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Login.js":"7","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Registration.js":"8","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\helpers\\AuthContext.js":"9"},{"size":478,"mtime":1634144308104,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1724,"mtime":1636573774364,"results":"13","hashOfConfig":"11"},{"size":928,"mtime":1635536959589,"results":"14","hashOfConfig":"11"},{"size":1757,"mtime":1635189231744,"results":"15","hashOfConfig":"11"},{"size":2789,"mtime":1636486325311,"results":"16","hashOfConfig":"11"},{"size":1185,"mtime":1636572968897,"results":"17","hashOfConfig":"11"},{"size":1411,"mtime":1635539063684,"results":"18","hashOfConfig":"11"},{"size":89,"mtime":1636484241688,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1sw0v46",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\index.js",[],["40","41"],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\App.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Home.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\CreatePost.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Post.js",["42"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Post() {\r\n  let { id } = useParams();\r\n  const [postObject, setPostObjetct] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n      setPostObjetct(response.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n      //the url is based on the router that gets the comments (url: '/byId/:id') on file server>routes>Comments.js\r\n      setComments(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    axios\r\n      .post(\r\n        'http://localhost:3001/comments',\r\n        {\r\n          commentBody: newComment,\r\n          PostId: id,\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: localStorage.getItem('accessToken'), // this is getting the token from the session storage of the browser\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(response.data.error.message);\r\n        } else {\r\n          const commentToAdd = {\r\n            commentBody: newComment,\r\n            username: response.data.username,\r\n          };\r\n          setComments([...comments, commentToAdd]); //adding the new comment to the comments state so that it is displayed right away when we add it\r\n          setNewComment(''); // this will clear the value of the input after commiting the post\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className='postPage'>\r\n      <div className='leftSide'>\r\n        <div className='post' id='individual'>\r\n          <div className='title'>{postObject.title}</div>\r\n          <div className='body'>{postObject.postText}</div>\r\n          <div className='footer'>{postObject.username}</div>\r\n        </div>\r\n      </div>\r\n      <div className='rightSide'>\r\n        <div className='addCommentContainer'>\r\n          <input\r\n            type='text'\r\n            value={newComment}\r\n            placeholder='Comment...'\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addComment}>Add Comment</button>\r\n        </div>\r\n        <div className='listOfComments'>\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className='comment'>\r\n                {comment.commentBody}\r\n                <br />\r\n                <label> Username: {comment.username} </label>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Login.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\pages\\Registration.js",[],"C:\\Users\\Nathan\\Desktop\\CODING\\REACT-FULLSTACK\\client\\src\\helpers\\AuthContext.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":6,"nodeType":"49","endLine":19,"endColumn":8,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [id]",{"range":"56","text":"57"},[723,725],"[id]"]